{"version":3,"sources":["App.js","index.js"],"names":["columns","id","label","minWidth","align","Transition","React","forwardRef","props","ref","Slide","direction","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","createData","username","avatar","prnums","score","prlinks","rows","useStyles","makeStyles","width","container","maxHeight","appbar","padding","display","alignItems","justifyContent","background","leaderimg","borderRadius","leaderimgbig","leaderdiv","popover","pointerEvents","BasicTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","leaderss","setLeaderss","timestamp","setTimsestamp","links","setLinks","useEffect","fetch","then","res","json","data","leaderboard","last_updated","open","setOpen","handleClose","leader","push","login","profile_url","avatar_url","pr_count","pr_links","AppBar","position","className","style","src","height","marginTop","marginRight","paddingLeft","paddingRight","paddingTop","paddingBottom","textAlign","marginBottom","undefined","marginLeft","Paper","TableContainer","component","Table","table","aria-label","TableHead","map","column","TableBody","slice","row","role","tabIndex","value","onClick","num","link","handleClickOpen","indexOf","Avatar","alt","small","href","textDecoration","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","border","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0fdd914.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst columns = [\n  { id: 'position', label: 'Position', minWidth: 50 },\n  { id: 'avatar', label: 'Avatar', minWidth: 100 },\n  { id: 'username', label: 'Username', minWidth: 170 },\n\n  {\n    id: 'prnums',\n    label: 'No. Of PRs',\n    minWidth: 170,\n    align: 'right'\n  },\n  {\n    id: 'score',\n    label: 'Score',\n    minWidth: 170,\n    align: 'right'\n  }\n];\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(username, avatar, prnums, score, prlinks) {\n  return { username, avatar, prnums, score, prlinks };\n}\n\nconst rows = [];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  appbar: {\n    padding: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: \"linear-gradient(to right, #EF971A, #FF512E)\"\n\n  },\n  leaderimg: {\n    width: 100,\n    borderRadius: 1000\n  },\n  leaderimgbig: {\n    width: 130,\n    borderRadius: 1000\n  },\n  leaderdiv: {\n    width: \"100%\",\n    justifyContent: \"space-between\"\n  },\n  popover: {\n    pointerEvents: 'none',\n  }\n});\n\n\nexport default function BasicTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searched, setSearched] = useState(\"\")\n  let [leaderss, setLeaderss] = useState({});\n  let [timestamp, setTimsestamp] = useState(\"\");\n  let [links, setLinks] = useState(\"\");\n  const requestSearch = (searchedVal) => {\n    const filteredRows = rows.filter((row) => {\n      return row.username[0].toLowerCase().includes(searchedVal.toLowerCase());\n    });\n\n    setSearched(filteredRows);\n  };;\n\n  const cancelSearch = () => {\n    setSearched(\"\");\n    requestSearch(searched);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    fetch(\"https://gssocleaderboardapi.herokuapp.com/leaderboard\").then(res => res.json()).then(data => {\n      setLeaderss(data.leaderboard);\n      setTimsestamp(data.last_updated);\n    });\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  let prlinks = []\n  let handleClickOpen = (num) => {\n    setOpen(true);\n    for (let link in leaderss[num].pr_links) {\n\n      prlinks.push(leaderss[num].pr_links[link] + \"\\n\\n\\n\\n\");\n\n    }\n    setLinks(prlinks)\n  };\n\n  const handleClose = () => {\n    prlinks = []\n    setOpen(false);\n  };\n\n\n\n  for (let leader in leaderss) {\n    rows.push(createData([leaderss[leader].login, leaderss[leader].profile_url], leaderss[leader].avatar_url, leaderss[leader].pr_count, leaderss[leader].score, leaderss[leader].profile_url, leaderss[leader].pr_links))\n  }\n  return (\n    <div>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <img src=\"https://gssoc.girlscript.tech/images/type.png\" style={{ width: 220, height: 50, marginTop: 5, marginRight: 30 }} />\n          <h2>Leaderboard</h2>\n        </div>\n      </AppBar>\n      <div style={{ paddingLeft: 100, paddingRight: 100, paddingTop: 50, paddingBottom: 50, textAlign: \"center\" }}>\n        <div style={{ marginBottom: 40, marginTop: 20, alignItems: \"center\", display: \"flex\", justifyContent: \"center\" }}>\n\n          <div style={{ marginRight: 200, marginTop: 50 }}>\n            <img src={rows[1] !== undefined ? rows[1].avatar : null} className={classes.leaderimg} />\n            <h3>2. {rows[1] !== undefined ? rows[1].username[0] : null}</h3>\n\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <img src={rows[1] !== undefined ? rows[0].avatar : null} className={classes.leaderimgbig} />\n            <h3>1. {rows[1] !== undefined ? rows[0].username[0] : null}</h3>\n          </div>\n          <div style={{ marginLeft: 200, marginTop: 50, textAlign: \"center\" }}>\n            <img src={rows[1] !== undefined ? rows[2].avatar : null} className={classes.leaderimg} />\n            <h3>3. {rows[1] !== undefined ? rows[2].username[0] : null}</h3>\n          </div>\n\n        </div>\n        <Paper style={{ width: \"auto\", background: \"#F5F5F5\", padding: 5, textAlign: \"center\" }}>\n          <p>Last Updated: {timestamp} </p>\n        </Paper>\n\n        <Paper>\n          {/* <SearchBar\n            value={searched}\n            onChange={(searchVal) => requestSearch(searchVal)}\n            onCancelSearch={() => cancelSearch()}\n          /> */}\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <StyledTableRow>\n                  {columns.map((column) => (\n                    <StyledTableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </StyledTableCell>\n                  ))}\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  return (\n                    // style = {{ display: rows.indexOf(row) === 0 || rows.indexOf(row) === 1 || rows.indexOf(row) === 2 ? \"none\" : null }\n                    <StyledTableRow hover role=\"checkbox\" tabIndex={-1} key={row.username}  >\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <StyledTableCell key={column.id} align={column.align} onClick={() => { handleClickOpen(rows.indexOf(row)); }}>\n                            {column.id === 'avatar' ? <Avatar alt=\"Remy Sharp\" src={value} className={classes.small} /> : column.id === 'position' ? rows.indexOf(row) + 1 : column.id === 'username' ? <div style={{ display: \"flex\", alignItems: \"center\" }}><GitHubIcon style={{ marginRight: 20 }} /><a href={value[1]} style={{ textDecoration: \"none\", color: \"black\" }}>{value[0]}</a></div> : value}\n\n                          </StyledTableCell>\n                        );\n\n                      })}\n                    </StyledTableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        <Dialog\n          open={open}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">{\"PR Links:\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              {links}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <button onClick={handleClose} color=\"primary\" style={{ background: \"#FA6329\", border: \"none\", padding: 10, color: \"white\" }}>\n              Close\n                            </button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </div >\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}